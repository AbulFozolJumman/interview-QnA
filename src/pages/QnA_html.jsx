import Container from "../components/Shared/Container/Container";

/* eslint-disable react/no-unescaped-entities */
const QnA_html = () => {
  return (
    <Container>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse">
          01. What is <span className="font-bold">HTML?</span>
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse"
          id="collapse"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          HTML stands for HyperText Markup Language. It is the standard language
          used to create and structure web pages on the internet.
          <br />
          HTML is not a programming language; it is a markup language that uses
          tags to define elements like headings, paragraphs, links, images,
          tables, forms, and more.
          <br />
          It forms the skeleton or basic structure of every webpage. Web
          browsers read HTML code and display the content accordingly.
          <br />
          In summary, HTML is the foundation of every website. Without HTML, we
          cannot build web pages.
          <br />
          <br />
          HTML ржПрж░ ржкрзВрж░рзНржгрж░рзВржк рж╣рж▓рзЛ HyperText Markup Languageред ржПржЯрж┐ ржПржХржЯрж┐ рж╕рзНржЯрзНржпрж╛ржирзНржбрж╛рж░рзНржб
          ржорж╛рж░рзНржХржЖржк ржнрж╛рж╖рж╛, ржпрзЗржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ ржУрзЯрзЗржмржкрзЗржЬ рждрзИрж░рж┐ ржУ ржЧржаржи ржХрж░рж┐ред
          <br />
          HTML ржХрзЛржирзЛ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржнрж╛рж╖рж╛ ржирзЯ, ржПржЯрж┐ ржПржХржЯрж┐ markup language, ржпрзЗржЦрж╛ржирзЗ ржЯрзНржпрж╛ржЧ
          ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржУрзЯрзЗржм ржХржиржЯрзЗржирзНржЯ ржпрзЗржоржи рж╣рзЗржбрж┐ржВ, ржкрзНржпрж╛рж░рж╛ржЧрзНрж░рж╛ржл, рж▓рж┐ржВржХ, ржЫржмрж┐, ржлрж░рзНржо
          ржЗрждрзНржпрж╛ржжрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯред
          <br />
          HTML ржорзВрж▓ржд ржПржХржЯрж┐ ржУрзЯрзЗржмржкрзЗржЬрзЗрж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ рждрзИрж░рж┐ ржХрж░рзЗред ржУрзЯрзЗржм ржмрзНрж░рж╛ржЙржЬрж╛рж░ HTML ржХрзЛржб
          ржкрзЬрзЗ ржПржмржВ рж╕рзЗржЗ ржЕржирзБржпрж╛рзЯрзА ржХржиржЯрзЗржирзНржЯ ржжрзЗржЦрж╛рзЯред
          <br />
          рж╕ржВржХрзНрж╖рзЗржкрзЗ, HTML ржЫрж╛рзЬрж╛ ржУрзЯрзЗржмржкрзЗржЬ рждрзИрж░рж┐ ржХрж░рж╛ рж╕ржорзНржнржм ржирзЯред ржПржЯрж┐ ржкрзНрж░рждрж┐ржЯрж┐ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗрж░
          ржорзВрж▓ ржнрж┐рждрзНрждрж┐ред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse2">
          02. What are the differences between{" "}
          <span className="font-bold">HTML4 and HTML5</span>?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse2"
          id="collapse2"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          There are several important differences between HTML4 and HTML5. Here
          are the key ones:
          <br />
          ЁЯФ╣ Doctype Declaration: HTML4 has a long and complex doctype, but
          HTML5 uses a very simple one: `&#60;!DOCTYPE html&#62;`.
          <br />
          ЁЯФ╣ New Semantic Elements: HTML5 introduced many new semantic elements
          like `header`, `footer`, `article`, `section`, which help to create
          more meaningful and well-structured pages. These were not available in
          HTML4.
          <br />
          ЁЯФ╣ Multimedia Support: HTML5 supports audio and video using `audio`
          and `video` tags directly, without the need for external plugins like
          Flash. HTML4 didnтАЩt have this feature.
          <br />
          ЁЯФ╣ Form Enhancements: HTML5 added new input types like `email`,
          `date`, `number`, and built-in validation features. HTML4 only had
          basic input types like `text` and `password`.
          <br />
          ЁЯФ╣ APIs and Features: HTML5 supports new APIs such as Geolocation API,
          Web Storage, Canvas for 2D graphics, and Drag-and-Drop. HTML4 does not
          support these.
          <br />
          ЁЯФ╣ Mobile Friendly: HTML5 is designed with modern devices and mobile
          compatibility in mind. HTML4 is more desktop-oriented.
          <br />
          So, overall, HTML5 is more powerful, flexible, and user-friendly than
          HTML4.
          <br />
          <br />
          HTML4 ржПржмржВ HTML5 ржПрж░ ржоржзрзНржпрзЗ ржХрж┐ржЫрзБ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржкрж╛рж░рзНржержХрзНржп ржЖржЫрзЗред ржирж┐ржЪрзЗ ржкрзНрж░ржзрж╛ржи
          ржкрж╛рж░рзНржержХрзНржпржЧрзБрж▓рзЛ ржмрж▓ржЫрж┐:
          <br />
          ЁЯФ╣ Doctype ржШрзЛрж╖ржгрж╛: HTML4 ржПрж░ Doctype ржЕржирзЗржХ ржмрзЬ ржУ ржЬржЯрж┐рж▓, ржХрж┐ржирзНрждрзБ HTML5 ржП рж╢рзБржзрзБ
          `&#60;!DOCTYPE html&#62;` рж▓рж┐ржЦрж▓рзЗржЗ рж╣рзЯред
          <br />
          ЁЯФ╣ ржирждрзБржи Semantic ржЯрзНржпрж╛ржЧ: HTML5 ржП `header`, `footer`, `article`,
          `section` ржПрж░ ржорждрзЛ ржЕржирзЗржХ ржирждрзБржи ржЯрзНржпрж╛ржЧ ржПрж╕рзЗржЫрзЗ, ржпрзЗржЧрзБрж▓рзЛ ржжрж┐рзЯрзЗ ржУрзЯрзЗржмржкрзЗржЬ ржЖрж░ржУ
          ржЧржаржиржорзВрж▓ржХржнрж╛ржмрзЗ рж▓рзЗржЦрж╛ ржпрж╛рзЯред HTML4 ржП ржПрж╕ржм ржЯрзНржпрж╛ржЧ ржЫрж┐рж▓ ржирж╛ред
          <br />
          ЁЯФ╣ ржорж╛рж▓рзНржЯрж┐ржорж┐ржбрж┐ржпрж╝рж╛ рж╕рж╛ржкрзЛрж░рзНржЯ: HTML5 ржП рж╕рж░рж╛рж╕рж░рж┐ `audio` ржПржмржВ `video` ржЯрзНржпрж╛ржЧ
          ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЕржбрж┐ржУ-ржнрж┐ржбрж┐ржУ ржЪрж╛рж▓рж╛ржирзЛ ржпрж╛рзЯ, ржХрзЛржирзЛ ржкрзНрж▓рж╛ржЧржЗржи ржЫрж╛рзЬрж╛ред HTML4 ржП ржПржнрж╛ржмрзЗ
          рж╕рж╛ржкрзЛрж░рзНржЯ ржЫрж┐рж▓ ржирж╛ред
          <br />
          ЁЯФ╣ ржлрж░рзНржорзЗрж░ ржЙржирзНржирзЯржи: HTML5 ржП `email`, `date`, `number` ржПрж░ ржорждрзЛ ржирждрзБржи ржЗржиржкрзБржЯ
          ржЯрж╛ржЗржк ржПрж╕рзЗржЫрзЗ ржПржмржВ ржмрж┐рж▓рзНржЯ-ржЗржи ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржиржУ ржЖржЫрзЗред HTML4 ржП рж╢рзБржзрзБ `text`,
          `password` ржПрж░ ржорждрзЛ ржмрзЗрж╕рж┐ржХ ржЯрж╛ржЗржк ржЫрж┐рж▓ред
          <br />
          ЁЯФ╣ ржирждрзБржи API ржПржмржВ ржлрж┐ржЪрж╛рж░: HTML5 ржП Geolocation API, Web Storage, Canvas,
          Drag-and-Drop ржЗрждрзНржпрж╛ржжрж┐ ржлрж┐ржЪрж╛рж░ ржпрзБржХрзНржд рж╣рзЯрзЗржЫрзЗред HTML4 ржП ржПржЧрзБрж▓рзЛ ржЫрж┐рж▓ ржирж╛ред
          <br />
          ЁЯФ╣ ржорзЛржмрж╛ржЗрж▓ ржлрзНрж░рзЗржирзНржбрж▓рж┐: HTML5 ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржорзЛржмрж╛ржЗрж▓ ржУ ржоржбрж╛рж░рзНржи ржбрж┐ржнрж╛ржЗрж╕
          ржорж╛ржерж╛рзЯ рж░рзЗржЦрзЗред HTML4 ржЫрж┐рж▓ ржорзВрж▓ржд ржбрзЗрж╕рзНржХржЯржк ржнрж┐рждрзНрждрж┐ржХред
          <br />
          рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржкрзЗ, HTML5 рж╣ржЪрзНржЫрзЗ ржЖрж░ржУ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА, ржлрж┐ржЪрж╛рж░-рж░рж┐ржЪ ржПржмржВ ржмрзНржпржмрж╣рж╛рж░ ржмрж╛ржирзНржзржм
          ржнрж╛рж░рзНрж╕ржиред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse3">
          03. What are <span className="font-bold">semantic tags</span> in HTML?
          Give me some examples.
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse3"
          id="collapse3"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          Semantic tags in HTML are tags that clearly describe the meaning or
          purpose of the content inside them. They make the structure of a web
          page more readable for both developers and browsers, including screen
          readers and search engines.
          <br />
          Instead of using generic tags like `&#60;div&#62;` or `&#60;span&#62;`
          for everything, semantic tags tell what the content is about. This
          improves accessibility, SEO, and code maintainability.
          <br />
          ЁЯФ╣ Examples of semantic tags:
          <br />
          * `&#60;header&#62;` тАУ Represents the top section or header of a page.
          <br />
          * `&#60;footer&#62;` тАУ Represents the bottom section or footer.
          <br />
          * `&#60;nav&#62;` тАУ Represents the navigation menu.
          <br />
          * `&#60;main&#62;` тАУ Represents the main content area of a page.
          <br />
          * `&#60;article&#62;` тАУ Used for self-contained content like blog
          posts or news.
          <br />
          * `&#60;section&#62;` тАУ Represents a section of content grouped
          together.
          <br />
          * `&#60;aside&#62;` тАУ For side content, like a sidebar or ad.
          <br />
          So, semantic tags help in writing cleaner, more meaningful, and
          SEO-friendly HTML code.
          <br />
          <br />
          Semantic ржЯрзНржпрж╛ржЧ рж╣ржЪрзНржЫрзЗ ржПржоржи HTML ржЯрзНржпрж╛ржЧ ржпрзЗржЧрзБрж▓рзЛ рждрж╛ржжрзЗрж░ ржнрж┐рждрж░рзЗрж░ ржХржиржЯрзЗржирзНржЯрзЗрж░ ржЕрж░рзНрже
          ржмрж╛ ржЙржжрзНржжрзЗрж╢рзНржп рж╕рзНржкрж╖рзНржЯржнрж╛ржмрзЗ ржмрзЛржЭрж╛рзЯред ржПржЧрзБрж▓рзЛрж░ ржорж╛ржзрзНржпржорзЗ ржХрзЛржбржЯрж╛ рж╢рзБржзрзБ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржирзЯ,
          ржбрзЗржнрзЗрж▓ржкрж╛рж░ ржУ рж╕рж╛рж░рзНржЪ ржЗржЮрзНржЬрж┐ржиржЧрзБрж▓рзЛрж░ ржЬржирзНржпржУ рж╕рж╣ржЬрзЗ ржмрзЛржЭрж╛рж░ ржорждрзЛ рж╣рзЯред
          <br />
          ржЖржорж░рж╛ ржпржжрж┐ рж╕ржм ржХрж┐ржЫрзБ `&#60;div&#62;` ржмрж╛ `&#60;span&#62;` ржжрж┐рзЯрзЗ рж▓рж┐ржЦрж┐, рждрж╛рж╣рж▓рзЗ
          ржмрзЛржЭрж╛ ржХржарж┐ржи рж╣рзЯ ржХрзЛржиржЯрж╛ ржХрзА ржЙржжрзНржжрзЗрж╢рзНржпрзЗ рж▓рзЗржЦрж╛ред ржХрж┐ржирзНрждрзБ semantic ржЯрзНржпрж╛ржЧ ржжрж┐рзЯрзЗ рж▓рж┐ржЦрж▓рзЗ
          ржХрж╛ржарж╛ржорзЛ ржкрж░рж┐рж╖рзНржХрж╛рж░ рж╣рзЯ, ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕рж┐ржмрж┐рж▓рж┐ржЯрж┐ ржмрж╛рзЬрзЗ, ржЖрж░ SEO-рждрзЗржУ ржнрж╛рж▓рзЛ ржлрж▓ ржкрж╛ржУрзЯрж╛
          ржпрж╛рзЯред
          <br />
          ЁЯФ╣ Semantic ржЯрзНржпрж╛ржЧрзЗрж░ ржХрж┐ржЫрзБ ржЙржжрж╛рж╣рж░ржг:
          <br />
          * `&#60;header&#62;` тАУ ржкрзЗржЬрзЗрж░ ржЯржк рж╣рзЗржбрж╛рж░ ржЕржВрж╢ ржмрзЛржЭрж╛рждрзЗред
          <br />
          * `&#60;footer&#62;` тАУ ржирж┐ржЪрзЗрж░ ржлрзБржЯрж╛рж░ ржЕржВрж╢рзЗрж░ ржЬржирзНржпред
          <br />
          * `&#60;nav&#62;` тАУ ржирзЗржнрж┐ржЧрзЗрж╢ржи ржорзЗржирзБ ржмрзЛржЭрж╛рждрзЗред
          <br />
          * `&#60;main&#62;` тАУ ржкрзЗржЬрзЗрж░ ржорзВрж▓ ржХржиржЯрзЗржирзНржЯрзЗрж░ ржЬржирзНржпред
          <br />
          * `&#60;article&#62;` тАУ ржмрзНрж▓ржЧ ржмрж╛ ржирж┐ржЙржЬрзЗрж░ ржорждрзЛ ржЖрж▓рж╛ржжрж╛ ржХржиржЯрзЗржирзНржЯ ржмрзЛржЭрж╛рждрзЗред
          <br />
          * `&#60;section&#62;` тАУ ржПржХржЗ ржзрж░ржирзЗрж░ ржХржиржЯрзЗржирзНржЯ ржЧрзНрж░рзБржк ржХрж░рж╛рж░ ржЬржирзНржпред
          <br />
          * `&#60;aside&#62;` тАУ рж╕рж╛ржЗржб ржХржиржЯрзЗржирзНржЯ ржмрж╛ рж╕рж╛ржЗржбржмрж╛рж░рзЗрж░ ржЬржирзНржпред
          <br />
          рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржкрзЗ, semantic ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ HTML ржХрзЛржб ржкрж░рж┐рж╖рзНржХрж╛рж░, ржЕрж░рзНржержмрзЛржзржХ ржУ
          SEO-ржлрзНрж░рзЗржирзНржбрж▓рж┐ рж╣рзЯред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse4">
          04. Why will you use <span className="font-bold"> Meta tag</span>?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse4"
          id="collapse4"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          I will use the `&#60;meta&#62;` tag in HTML to provide important
          metadata about the web page. This metadata is not visible on the page
          itself but helps browsers, search engines, and social media platforms
          understand the page better.
          <br />
          Here are some key reasons to use meta tags:
          <br />
          ЁЯФ╣ Character Encoding: To specify the character set, like UTF-8, so
          the browser displays text correctly.
          <br />
          Example: `&#60;meta charset="UTF-8"&#62;`
          <br />
          ЁЯФ╣ SEO (Search Engine Optimization): Meta tags like `description` help
          search engines understand the content of the page and improve
          visibility in search results.
          <br />
          Example: `&#60;meta name="description" content="Best online fashion
          store for trendy clothes."&#62;`
          <br />
          ЁЯФ╣ Responsive Design: To make the website mobile-friendly using the
          viewport meta tag.
          <br />
          Example: `&#60;meta name="viewport" content="width=device-width,
          initial-scale=1.0"&#62;`
          <br />
          ЁЯФ╣ Social Media Sharing: Meta tags help control how your page appears
          when shared on platforms like Facebook or Twitter.
          <br />
          So, I use meta tags to improve browser compatibility, SEO,
          accessibility, and social media presentation of a web page.
          <br />
          <br />
          ржЖржорж┐ `&#60;meta&#62;` ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ ржПржХржЯрж┐ ржУрзЯрзЗржмржкрзЗржЬ рж╕ржорзНржкрж░рзНржХрзЗ
          ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рждржерзНржп (metadata) ржжрзЗрзЯрж╛рж░ ржЬржирзНржп, ржпрж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░, рж╕рж╛рж░рзНржЪ ржЗржЮрзНржЬрж┐ржи ржПржмржВ
          рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐ржпрж╝рж╛ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржоржХрзЗ ржкрзЗржЬржЯрж╛ ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржмрзБржЭрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред ржПржЗ
          рждржерзНржп ржкрзЗржЬрзЗ ржжрзЗржЦрж╛ ржпрж╛рзЯ ржирж╛, ржХрж┐ржирзНрждрзБ ржкрзЗржЫржирзЗ ржЕржирзЗржХ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржнрзВржорж┐ржХрж╛ рж░рж╛ржЦрзЗред
          <br />
          ржХрж┐ржЫрзБ ржкрзНрж░ржзрж╛ржи ржХрж╛рж░ржг рж╣рж▓рзЛ:
          <br />
          ЁЯФ╣ ржЕржХрзНрж╖рж░ ржПржиржХрзЛржбрж┐ржВ ржарж┐ржХ ржХрж░рж╛: ржпрж╛рждрзЗ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржарж┐ржХржнрж╛ржмрзЗ рж▓рзЗржЦрж╛ ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рзЗред
          <br />
          ржЙржжрж╛рж╣рж░ржг: `&#60;meta charset="UTF-8"&#62;`
          <br />
          ЁЯФ╣ SEO ржмрж╛рзЬрж╛ржирзЛрж░ ржЬржирзНржп: `description` ржорзЗржЯрж╛ ржЯрзНржпрж╛ржЧ ржжрж┐рзЯрзЗ ржкрзЗржЬрзЗрж░ ржмрж┐рж╖рзЯ рж╕рж╛рж░рзНржЪ
          ржЗржЮрзНржЬрж┐ржиржХрзЗ ржмрзЛржЭрж╛ржирзЛ рж╣рзЯ, ржпрж╛рждрзЗ ржЧрзБржЧрж▓рзЗ ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржжрзЗржЦрж╛ ржпрж╛рзЯред
          <br />
          ржЙржжрж╛рж╣рж░ржг: `&#60;meta name="description" content="Trendy ржЬрж╛ржорж╛рж░ ржЕржирж▓рж╛ржЗржи
          ржлрзНржпрж╛рж╢ржи рж╢ржк"&#62;`
          <br />
          ЁЯФ╣ ржорзЛржмрж╛ржЗрж▓ рж░рзЗрж╕ржкржирж╕рж┐ржн ржХрж░рж╛рж░ ржЬржирзНржп: `viewport` ржорзЗржЯрж╛ ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржорзЛржмрж╛ржЗрж▓
          рж╕рзНржХрзНрж░рж┐ржирзЗ ржарж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛ржирзЛ ржпрж╛рзЯред
          <br />
          ржЙржжрж╛рж╣рж░ржг: `&#60;meta name="viewport" content="width=device-width,
          initial-scale=1.0"&#62;`
          <br />
          ЁЯФ╣ рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐рзЯрж╛рзЯ рж╢рзЗрзЯрж╛рж░ ржХрж░рж▓рзЗ ржарж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп: ржмрж┐рж╢рзЗрж╖ ржорзЗржЯрж╛ ржЯрзНржпрж╛ржЧ
          ржжрж┐рзЯрзЗ ржарж┐ржХржнрж╛ржмрзЗ ржЯрж╛ржЗржЯрзЗрж▓, ржЫржмрж┐ ржУ ржмрж░рзНржгржирж╛ ржХржирзНржЯрзНрж░рзЛрж▓ ржХрж░рж╛ ржпрж╛рзЯред
          <br />
          рж╕ржВржХрзНрж╖рзЗржкрзЗ, meta ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗрж░ SEO, ржмрзНрж░рж╛ржЙржЬрж╛рж░ рж╕рж╛ржкрзЛрж░рзНржЯ,
          рж░рзЗрж╕ржкржирж╕рж┐ржнржирзЗрж╕ ржПржмржВ рж╕рзЛрж╢рзНржпрж╛рж▓ рж╢рзЗрзЯрж╛рж░рж┐ржВ рж╕ржмржХрж┐ржЫрзБ ржЙржирзНржиржд рж╣рзЯред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse5">
          05. What are the differences between{" "}
          <span className="font-bold">
            inline, inline-block and block elements
          </span>
          ?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse5"
          id="collapse5"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          In HTML and CSS, elements are rendered differently based on their
          display type. The main differences between `inline`, `inline-block`,
          and `block` elements are:
          <br />
          ЁЯФ╣ Block Elements:
          <br />
          * Always start on a new line.
          <br />
          * Take up the full width available (by default).
          <br />
          * You can set width, height, margin, and padding.
          <br />
          * Example elements: `&#60;div&#62;`, `&#60;h1&#62;`, `&#60;p&#62;`,
          `&#60;section&#62;`
          <br />
          * Display: `display: block;`
          <br />
          ЁЯФ╣ Inline Elements:
          <br />
          * Do not start on a new line.
          <br />
          * Take only as much width as needed.
          <br />
          * Width and height cannot be set.
          <br />
          * Only horizontal padding/margin works (top/bottom wonтАЩt affect
          layout).
          <br />
          * Example elements: `&#60;span&#62;`, `&#60;a&#62;`,
          `&#60;strong&#62;`, `&#60;em&#62;`
          <br />
          * Display: `display: inline;`
          <br />
          ЁЯФ╣ Inline-block Elements:
          <br />
          * Behaves like inline (stays in line with other content).
          <br />
          * But allows setting width and height like block elements.
          <br />
          * Useful when you want inline flow with block-like control.
          <br />
          * Example: Used commonly in buttons or layout boxes.
          <br />
          * Display: `display: inline-block;`
          <br />
          So, depending on the layout requirement, I use these display types
          accordingly.
          <br />
          <br />
          HTML ржУ CSS-ржП ржПржХржЯрж┐ ржПрж▓рж┐ржорзЗржирзНржЯ ржХрж┐ржнрж╛ржмрзЗ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗ рждрж╛ ржирж┐рж░рзНржнрж░ ржХрж░рзЗ рждрж╛рж░ display
          type ржПрж░ ржЙржкрж░ред ржирж┐ржЪрзЗ рждрж┐ржиржЯрж┐ display type ржПрж░ ржорзВрж▓ ржкрж╛рж░рзНржержХрзНржпржЧрзБрж▓рзЛ ржмрж▓ржЫрж┐:
          <br />
          ЁЯФ╣ Block ржПрж▓рж┐ржорзЗржирзНржЯ:
          <br />
          * рж╕ржмрж╕ржорзЯ ржирждрзБржи рж▓рж╛ржЗржирзЗ рж╢рзБрж░рзБ рж╣рзЯред
          <br />
          * ржкрзБрж░рзЛ width ржжржЦрж▓ ржХрж░рзЗред
          <br />
          * ржЖржкржирж┐ width, height, margin, padding рж╕ржм рж╕рзЗржЯ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред
          <br />
          * ржЙржжрж╛рж╣рж░ржг: `&#60;div&#62;`, `&#60;h1&#62;`, `&#60;p&#62;`,
          `&#60;section&#62;`
          <br />
          * Display: `display: block;`
          <br />
          ЁЯФ╣ Inline ржПрж▓рж┐ржорзЗржирзНржЯ:
          <br />
          * ржирждрзБржи рж▓рж╛ржЗржирзЗ рж╢рзБрж░рзБ рж╣рзЯ ржирж╛, рж▓рж╛ржЗржирзЗрж░ ржоржзрзНржпрзЗ ржерж╛ржХрзЗред
          <br />
          * рж╢рзБржзрзБржорж╛рждрзНрж░ ржпрждржЯрзБржХрзБ ржЬрж╛рзЯржЧрж╛ ржжрж░ржХрж╛рж░ рждрждржЯрзБржХрзБржЗ ржирзЗрзЯред
          <br />
          * width ржПржмржВ height рж╕рзЗржЯ ржХрж░рж╛ ржпрж╛рзЯ ржирж╛ред
          <br />
          * рж╢рзБржзрзБржорж╛рждрзНрж░ left/right margin ржУ padding ржХрж╛ржЬ ржХрж░рзЗ, top/bottom ржХрж╛ржЬ ржХрж░рзЗ
          ржирж╛ред
          <br />
          * ржЙржжрж╛рж╣рж░ржг: `&#60;span&#62;`, `&#60;a&#62;`, `&#60;strong&#62;`
          <br />
          * Display: `display: inline;`
          <br />
          ЁЯФ╣ Inline-block ржПрж▓рж┐ржорзЗржирзНржЯ:
          <br />
          * рж▓рж╛ржЗржирзЗрж░ ржоржзрзНржпрзЗржЗ ржерж╛ржХрзЗ (inline ржПрж░ ржорждрзЛ)ред
          <br />
          * ржХрж┐ржирзНрждрзБ width, height, padding, margin ржмрзНрж▓ржХрзЗрж░ ржорждрзЛ ржХрж╛ржЬ ржХрж░рзЗред
          <br />
          * ржПржЯрж┐ рждржЦржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ ржпржЦржи ржмрзНрж▓ржХ-рж╕рзНржЯрж╛ржЗрж▓ ржХржирзНржЯрзНрж░рзЛрж▓ ржжрж░ржХрж╛рж░, ржХрж┐ржирзНрждрзБ ржЗржирж▓рж╛ржЗржирзЗрж░
          ржорждрзЛ ржЖржЪрж░ржг ржЪрж╛ржЗред
          <br />
          * Display: `display: inline-block;`
          <br />
          ржПржЗ display ржЯрж╛ржЗржкржЧрзБрж▓рзЛ ржкрзНрж░рзЯрзЛржЬржи ржЕржирзБржпрж╛рзЯрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж┐ рж▓рзЗржЖржЙржЯ ржбрж┐ржЬрж╛ржЗржи ржХрж░рж┐ред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse6">
          06. What are{" "}
          <span className="font-bold">properties and attributes</span> in HTML?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse6"
          id="collapse6"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          In HTML, both attributes and properties are used to define information
          about elements, but they are different in how and when they are used.
          <br />
          ЁЯФ╣ Attributes:
          <br />
          * Attributes are written in the HTML code, inside the start tag of an
          element.
          <br />
          * They define initial values or settings for the element.
          <br />
          * Attributes are static and donтАЩt change automatically after the page
          loads (unless changed via JavaScript).
          <br />
          * Example:
          <br />
          {`
  <input type="text" value="Jumman" disabled />
  `}
          <br />
          * Here, `type`, `value`, and `disabled` are attributes.
          <br />
          ЁЯФ╣ Properties:
          <br />
          * Properties are JavaScript-accessible representations of the current
          state of an element in the DOM.
          <br />
          * They are used after the page loads, through JavaScript, to get or
          update values dynamically.
          <br />
          * Example:
          <br />
          let input = document.querySelector('input');
          <br />
          input.value = "New Text"; // This is a property
          <br />
          input.disabled = false; // This changes the disabled property
          <br />
          So, I use attributes in the HTML markup and properties when I want to
          work with elements dynamically using JavaScript.
          <br />
          <br />
          HTML-ржП Attribute ржПржмржВ Property ржжрзБржЯрзЛржЗ ржПрж▓рж┐ржорзЗржирзНржЯ рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп ржжрзЗрзЯ,
          ржХрж┐ржирзНрждрзБ ржПржжрзЗрж░ ржХрж╛ржЬ ржПржмржВ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╕ржорзЯ ржнрж┐ржирзНржиред
          <br />
          ЁЯФ╣ Attribute (ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ):
          <br />
          * ржПржЯрж┐ HTML ржЯрзНржпрж╛ржЧрзЗрж░ ржнрж┐рждрж░рзЗ рж▓рзЗржЦрж╛ рж╣рзЯред
          <br />
          * ржПрж▓рж┐ржорзЗржирзНржЯрзЗрж░ ржкрзНрж░рж╛ржержорж┐ржХ ржорж╛ржи ржмрж╛ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи рж╕рзЗржЯ ржХрж░рзЗред
          <br />
          * ржПржЯрж┐ рж╕рзНржЯрзНржпрж╛ржЯрж┐ржХ ржЕрж░рзНржерж╛рзО ржкрзЗржЬ рж▓рзЛржбрзЗрж░ ржкрж░рзЗ ржирж┐ржЬрзЗ ржерзЗржХрзЗ ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯ ржирж╛ (ржпржжрж┐ ржирж╛
          JavaScript ржжрж┐рзЯрзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ рж╣рзЯ)ред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          {`
  <input type="text" value="Jumman" disabled />
  `}
          <br />
          ржПржЦрж╛ржирзЗ `type`, `value`, `disabled` рж╣рж▓рзЛ ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯред
          <br />
          ЁЯФ╣ Property (ржкрзНрж░ржкрж╛рж░рзНржЯрж┐):
          <br />
          * ржПржЯрж┐ ржкрзЗржЬ рж▓рзЛржб рж╣ржУржпрж╝рж╛рж░ ржкрж░рзЗ JavaScript ржжрж┐рзЯрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
          <br />
          * ржПржЯрж┐ ржПрж▓рж┐ржорзЗржирзНржЯрзЗрж░ ржмрж░рзНрждржорж╛ржи ржЕржмрж╕рзНржерж╛ ржмрзЛржЭрж╛рзЯред
          <br />
          * ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ ржбрж╛ржпрж╝ржирж╛ржорж┐ржХржнрж╛ржмрзЗ ржорж╛ржи ржкрзЬрждрзЗ ржмрж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ
          ржкрж╛рж░рж┐ред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          let input = document.querySelector('input');
          <br />
          input.value = "New Text"; // ржПржЯрж╛ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐
          <br />
          input.disabled = false; // ржПржЯрж╛ ржжрж┐рзЯрзЗржЗ ржЖржорж░рж╛ disable ржмржирзНржз ржХрж░ржЫрж┐
          <br />
          рж╕ржВржХрзНрж╖рзЗржкрзЗ, attribute ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ ржпржЦржи HTML рж▓рж┐ржЦрж┐, ржЖрж░ property ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐
          ржпржЦржи JavaScript ржжрж┐рзЯрзЗ ржПрж▓рж┐ржорзЗржирзНржЯрзЗрж░ ржорж╛ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржЪрж╛ржЗред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse7">
          07. What is a <span className="font-bold">viewport</span>?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse7"
          id="collapse7"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          In web development, the viewport is the visible area of a web page on
          a userтАЩs screen. It varies depending on the device being used тАФ for
          example, a desktop monitor has a large viewport, while a mobile phone
          has a small one.
          <br />
          Modern websites are responsive, meaning they adjust content and layout
          according to the size of the viewport.
          <br />
          To control this behavior, we use the viewport meta tag in the
          `&#60;head&#62;` section of HTML, like this:
          <br />
          {`
<meta name="viewport" content="width=device-width, initial-scale=1.0">
`}
          <br />
          ЁЯФ╣ `width=device-width` sets the viewport width to match the device
          screen.
          <br />
          ЁЯФ╣ `initial-scale=1.0` sets the initial zoom level.
          <br />
          Without this tag, mobile browsers often scale and zoom the page by
          default, which breaks responsive design.
          <br />
          So, the viewport is critical for responsive web design and ensuring a
          consistent user experience across different screen sizes.
          <br />
          <br />
          ржУрзЯрзЗржм ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯрзЗ, viewport рж╣рж▓рзЛ ржЗржЙржЬрж╛рж░рзЗрж░ рж╕рзНржХрзНрж░рж┐ржирзЗ ржпрзЗржЗ ржЕржВрж╢рзЗ ржУрзЯрзЗржмржкрзЗржЬ ржжрзЗржЦрж╛
          ржпрж╛рзЯ, рж╕рзЗржЗ ржжрзГрж╢рзНржпржорж╛ржи ржПрж▓рж╛ржХрж╛ред ржПржЯрж┐ ржбрж┐ржнрж╛ржЗрж╕ ржЕржирзБржпрж╛рзЯрзА ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣рзЯ тАФ ржпрзЗржоржи,
          ржбрзЗрж╕рзНржХржЯржкрзЗ ржмрзЬ viewport рж╣рзЯ, ржЖрж░ ржорзЛржмрж╛ржЗрж▓рзЗ ржЫрзЛржЯред
          <br />
          ржЖржзрзБржирж┐ржХ ржУрзЯрзЗржмрж╕рж╛ржЗржЯржЧрзБрж▓рзЛ responsive, ржорж╛ржирзЗ рждрж╛рж░рж╛ рж╕рзНржХрзНрж░рж┐ржи рж╕рж╛ржЗржЬ ржЕржирзБржпрж╛рзЯрзА
          ржХржиржЯрзЗржирзНржЯрзЗрж░ рж▓рзЗржЖржЙржЯ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗред
          <br />
          ржПржЗ ржЖржЪрж░ржг ржХржирзНржЯрзНрж░рзЛрж▓ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржорж░рж╛ HTML-ржПрж░ `&#60;head&#62;` ржЕржВрж╢рзЗ viewport
          meta tag ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐:
          <br />
          {`
<meta name="viewport" content="width=device-width, initial-scale=1.0">
`}
          <br />
          ЁЯФ╣ `width=device-width` ржбрж┐ржнрж╛ржЗрж╕рзЗрж░ рж╕рзНржХрзНрж░рж┐ржи ржЕржирзБржпрж╛рзЯрзА ржнрж┐ржЙржкрзЛрж░рзНржЯрзЗрж░ ржкрзНрж░рж╕рзНрже рж╕рзЗржЯ
          ржХрж░рзЗред
          <br />
          ЁЯФ╣ `initial-scale=1.0` ржУрзЯрзЗржмржкрзЗржЬрзЗрж░ рж╢рзБрж░рзБрж░ zoom рж▓рзЗржнрзЗрж▓ ржарж┐ржХ ржХрж░рзЗред
          <br />
          ржпржжрж┐ ржПржЗ ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржирж╛ ржХрж░рж┐, рждрж╛рж╣рж▓рзЗ ржорзЛржмрж╛ржЗрж▓ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржкрзЗржЬржХрзЗ ржЬрзБржо ржХрж░рзЗ
          ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рзЗ, ржлрж▓рзЗ ржбрж┐ржЬрж╛ржЗржи ржнрзЗржЩрзЗ ржпрж╛рзЯред
          <br />
          рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржкрзЗ, viewport рж╣рж▓рзЛ responsive design-ржПрж░ ржнрж┐рждрзНрждрж┐, ржпрж╛ ржУрзЯрзЗржмрж╕рж╛ржЗржЯржХрзЗ
          ржорзЛржмрж╛ржЗрж▓, ржЯрзНржпрж╛ржмрж▓рзЗржЯ ржУ ржбрзЗрж╕рзНржХржЯржкрзЗ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse8">
          08. What is <span className="font-bold">hyperlink</span> in html? What
          tag and attribute will you use for hyperlink?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse8"
          id="collapse8"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          In HTML, a hyperlink is a link that connects one page to another тАФ
          either within the same website or to an external website. When a user
          clicks on a hyperlink, it navigates to the specified URL or resource.
          <br />
          To create a hyperlink in HTML, we use the `&#60;a&#62;` tag, which
          stands for anchor.
          <br />
          The most important attribute used with it is `href`, which stands for
          hyperlink reference. This defines the destination URL.
          <br />
          ЁЯФ╣ Example:
          <br />
          &#60;a href="https://www.example.com"&#62;Visit Example&#60;/a&#62;
          <br />
          In this example:
          <br />
          * `&#60;a&#62;` is the anchor tag.
          <br />
          * `href="https://www.example.com"` specifies the link destination.
          <br />
          * The text "Visit Example" is the clickable part of the link.
          <br />
          We can also use other attributes like `target="_blank"` to open the
          link in a new tab.
          <br />
          So, the anchor tag `&#60;a&#62;` with the `href` attribute is used to
          create hyperlinks in HTML.
          <br />
          <br />
          HTML-ржП Hyperlink ржПржоржи ржПржХржЯрж┐ рж▓рж┐ржВржХ, ржпрзЗржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржПржХржЯрж┐ ржкрзЗржЬ ржерзЗржХрзЗ ржЕржирзНржп
          ржкрзЗржЬрзЗ, ржЕржержмрж╛ ржПржХржЯрж┐ рж╕рж╛ржЗржЯ ржерзЗржХрзЗ ржЕржирзНржп рж╕рж╛ржЗржЯрзЗ ржирзЗржнрж┐ржЧрзЗржЯ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред ржЗржЙржЬрж╛рж░
          рж▓рж┐ржВржХрзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ рж╕рзЗржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ URL-ржП ржЪрж▓рзЗ ржпрж╛рзЯред
          <br />
          Hyperlink рждрзИрж░рж┐ ржХрж░рждрзЗ ржЖржорж░рж╛ `&#60;a&#62;` ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐, ржпрзЗржЯрж┐ржХрзЗ
          anchor tag ржмрж▓рж╛ рж╣рзЯред
          <br />
          ржПржЗ ржЯрзНржпрж╛ржЧрзЗрж░ рж╕ржЩрзНржЧрзЗ рж╕ржмржЪрзЗрзЯрзЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ рж╣рж▓рзЛ `href` тАУ ржпрж╛рж░
          ржорж╛ржирзЗ hyperlink reference, ржЕрж░рзНржерж╛рзО рж▓рж┐ржВржХрзЗрж░ ржарж┐ржХрж╛ржирж╛ред
          <br />
          ЁЯФ╣ ржЙржжрж╛рж╣рж░ржг:
          <br />
          &#60;a href="https://www.example.com"&#62;Visit Example&#60;/a&#62;
          <br />
          ржПржЦрж╛ржирзЗ:
          <br />
          * `&#60;a&#62;` рж╣рж▓рзЛ anchor ржЯрзНржпрж╛ржЧ,
          <br />
          * `href="https://www.example.com"` рж╣рж▓рзЛ ржпрзЗржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ ржпрж╛ржмрзЗ,
          <br />
          * "Visit Example" рж╣рж▓рзЛ ржпрзЗржЯрж╛ ржХрзНрж▓рж┐ржХржпрзЛржЧрзНржп ржЯрзЗржХрзНрж╕ржЯред
          <br />
          ржкрзНрж░рзЯрзЛржЬржирзЗ ржЖржорж░рж╛ `target="_blank"` ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рж┐, ржпрж╛рждрзЗ рж▓рж┐ржВржХржЯрж┐ ржирждрзБржи
          ржЯрзНржпрж╛ржмрзЗ ржЦрзБрж▓рзЗред
          <br />
          рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржкрзЗ, HTML-ржП Hyperlink рждрзИрж░рж┐ ржХрж░рждрзЗ ржЖржорж░рж╛ `&#60;a&#62;` ржЯрзНржпрж╛ржЧ ржПржмржВ
          `href` ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse9">
          09. What is the difference between HTML{" "}
          <span className="font-bold">elements and tags</span>?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse9"
          id="collapse9"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          In HTML, tags and elements are related, but they are not the same.
          <br />
          ЁЯФ╣ HTML Tag:
          <br />
          * A tag is a part of the HTML syntax used to define the start or end
          of an element.
          <br />
          * Tags are written using angle brackets like `&#60;p&#62;`,
          `&#60;/p&#62;`, `&#60;h1&#62;`, `&#60;div&#62;`.
          <br />
          * There are two types of tags:
          <br />
          * Opening tag тАУ like `&#60;p&#62;`
          <br />
          * Closing tag тАУ like `&#60;/p&#62;`
          <br />
          ЁЯФ╣ HTML Element:
          <br />
          * An element is the complete structure тАФ including the opening tag,
          content, and closing tag.
          <br />
          * It represents the actual content on the page.
          <br />
          * Example:
          <br />
          &#60;p&#62;Hello World&#60;/p&#62;
          <br />
          * Here, `&#60;p&#62;` is the opening tag,
          <br />
          `Hello World` is the content,
          <br />
          `&#60;/p&#62;` is the closing tag,
          <br />
          and together they form a paragraph element.
          <br />
          So, in short, tags are just parts, and elements are the full building
          blocks of an HTML page.
          <br />
          <br />
          HTML-ржП Tag ржПржмржВ Element ржПржХрж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рзЗ, ржХрж┐ржирзНрждрзБ рждрж╛рж░рж╛ ржПржХ ржЬрж┐ржирж┐рж╕ ржирж╛ред
          <br />
          ЁЯФ╣ HTML Tag (ржЯрзНржпрж╛ржЧ):
          <br />
          * Tag рж╣ржЪрзНржЫрзЗ HTML-ржПрж░ syntax, ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ ржХрзЛржирзЛ ржПрж▓рж┐ржорзЗржирзНржЯ рж╢рзБрж░рзБ ржмрж╛ рж╢рзЗрж╖ рж╣рзЯред
          <br />
          * ржПржЯрж┐ angle brackets ржПрж░ ржоржзрзНржпрзЗ рж▓рзЗржЦрж╛ рж╣рзЯ, ржпрзЗржоржи `&#60;p&#62;`,
          `&#60;/p&#62;`, `&#60;div&#62;`, `&#60;h1&#62;`ред
          <br />
          * Tag ржжрзБржЗ рж░ржХржорзЗрж░ рж╣рзЯ:
          <br />
          * Opening tag тАУ ржпрзЗржоржи `&#60;p&#62;`
          <br />
          * Closing tag тАУ ржпрзЗржоржи `&#60;/p&#62;`
          <br />
          ЁЯФ╣ HTML Element (ржПрж▓рж┐ржорзЗржирзНржЯ):
          <br />
          * Element рж╣ржЪрзНржЫрзЗ ржкрзБрж░рзЛ ржЧржаржи тАУ ржпрзЗржЦрж╛ржирзЗ ржЖржЫрзЗ opening tag, content, ржПржмржВ
          closing tagред
          <br />
          * ржПржЯрж┐ ржУрзЯрзЗржмржкрзЗржЬрзЗ ржмрж╛рж╕рзНрждржм ржХржиржЯрзЗржирзНржЯ ржмрзЛржЭрж╛рзЯред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          &#60;p&#62;Hello World&#60;/p&#62;
          <br />
          * `&#60;p&#62;` рж╣рж▓рзЛ opening tag,
          <br />
          `Hello World` рж╣рж▓рзЛ content,
          <br />
          `&#60;/p&#62;` рж╣рж▓рзЛ closing tag,
          <br />
          рж╕ржм ржорж┐рж▓рж┐рзЯрзЗ ржПржЯрж┐ржЗ рж╣рж▓рзЛ ржПржХржЯрж┐ paragraph elementред
          <br />
          рж╕рзЛржЬрж╛ ржХржерж╛рзЯ, tag рж╣рж▓рзЛ ржЧржаржи ржХрж░рж╛рж░ ржЕржВрж╢, ржЖрж░ element рж╣рж▓рзЛ рж╕рзЗржЗ ржЧржаржиржЯрж┐ рж╕ржорзНржкрзВрж░рзНржгред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse10">
          10. Explain the use of an{" "}
          <span className="font-bold">iframe tag</span>.
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse10"
          id="collapse10"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          The `&#60;iframe&#62;` tag in HTML is used to embed another webpage or
          external content into the current webpage. It acts like a window or
          frame inside your page, where you can display other content тАФ such as
          a website, video, map, PDF, or another HTML file.
          <br />
          ЁЯФ╣ Key uses of `&#60;iframe&#62;`:
          <br />
          * Embedding a YouTube video
          <br />
          * Showing a Google Map
          <br />
          * Displaying a PDF or a login form from another domain
          <br />
          * Including a different HTML page inside a main page
          <br />
          ЁЯФ╣ Example:
          <br />
          {`
<iframe src="https://www.example.com" width="600" height="400"></iframe>
`}
          <br />
          This will show the webpage `https://www.example.com` inside a 600x400
          pixel frame.
          <br />
          ЁЯФ╣ Important attributes:
          <br />
          * `src` тАУ specifies the URL of the content
          <br />
          * `width` & `height` тАУ define the frame size
          <br />
          * `title` тАУ for accessibility
          <br />
          * `allowfullscreen` тАУ allows full screen (useful for videos)
          <br />
          * `frameborder`, `loading`, and others for control and performance
          <br />
          So, the `&#60;iframe&#62;` tag is helpful when we want to include or
          display external content without redirecting the user.
          <br />
          <br />
          HTML-ржП `&#60;iframe&#62;` ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржПржХржЯрж┐ ржУрзЯрзЗржмржкрзЗржЬрзЗрж░ ржнрж┐рждрж░рзЗ
          ржЖрж░рзЗржХржЯрж┐ ржУрзЯрзЗржмржкрзЗржЬ ржмрж╛ ржПржХрзНрж╕ржЯрж╛рж░рзНржирж╛рж▓ ржХржиржЯрзЗржирзНржЯ ржПржоржмрзЗржб ржХрж░рж╛рж░ ржЬржирзНржпред ржПржЯрж┐ ржПржоржи ржПржХржЯрж┐
          ржлрзНрж░рзЗржо ржмрж╛ ржЙржЗржирзНржбрзЛ рждрзИрж░рж┐ ржХрж░рзЗ ржпрзЗржЦрж╛ржирзЗ ржЕржирзНржп рж╕рж╛ржЗржЯ ржмрж╛ ржХржиржЯрзЗржирзНржЯ ржжрзЗржЦрж╛ржирзЛ ржпрж╛рзЯред
          <br />
          ЁЯФ╣ `&#60;iframe&#62;` ржПрж░ ржкрзНрж░ржзрж╛ржи ржмрзНржпржмрж╣рж╛рж░:
          <br />
          * YouTube ржнрж┐ржбрж┐ржУ ржПржоржмрзЗржб ржХрж░рж╛
          <br />
          * Google Map ржжрзЗржЦрж╛ржирзЛ
          <br />
          * PDF ржлрж╛ржЗрж▓ ржжрзЗржЦрж╛ржирзЛ
          <br />
          * ржЕржирзНржп ржПржХржЯрж┐ HTML ржлрж╛ржЗрж▓ ржмрж╛ ржлрж░рзНржо ржЗржирж╕рж╛рж░рзНржЯ ржХрж░рж╛
          <br />
          ЁЯФ╣ ржЙржжрж╛рж╣рж░ржг:
          <br />
          {`
<iframe src="https://www.example.com" width="600" height="400"></iframe>
`}
          <br />
          ржПржЦрж╛ржирзЗ `example.com` ржУрзЯрзЗржмржкрзЗржЬржЯрж┐ 600x400 ржкрж┐ржХрзНрж╕рзЗрж▓рзЗрж░ ржлрзНрж░рзЗржорзЗ ржжрзЗржЦрж╛ржмрзЗред
          <br />
          ЁЯФ╣ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ:
          <br />
          * `src` тАУ ржХрзЛржи URL ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗ
          <br />
          * `width`, `height` тАУ ржлрзНрж░рзЗржорзЗрж░ рж╕рж╛ржЗржЬ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рзЗ
          <br />
          * `title` тАУ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕рж┐ржмрж┐рж▓рж┐ржЯрж┐рж░ ржЬржирзНржп
          <br />
          * `allowfullscreen` тАУ ржлрзБрж▓ рж╕рзНржХрзНрж░рж┐ржи ржХрж░рж╛рж░ ржЕржирзБржорждрж┐ ржжрзЗрзЯ
          <br />
          * `frameborder`, `loading` тАУ ржЕржирзНржпрж╛ржирзНржп ржирж┐рзЯржирзНрждрзНрж░ржг ржПржмржВ ржкрж╛рж░ржлрж░ржорзНржпрж╛ржирзНрж╕рзЗрж░
          ржЬржирзНржп
          <br />
          рж╕ржВржХрзНрж╖рзЗржкрзЗ, `&#60;iframe&#62;` ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ ржПржХржЗ ржкрзЗржЬрзЗ ржмрж╛ржЗрж░рзЗрж░ ржХржиржЯрзЗржирзНржЯ
          ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рж┐, ржЗржЙржЬрж╛рж░ржХрзЗ ржЕржирзНржп ржкрзЗржЬрзЗ ржирж╛ ржирж┐рзЯрзЗржЗред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse11">
          11. Have you used <span className="font-bold">Audio and Video</span>{" "}
          tags? How do they work?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse11"
          id="collapse11"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          `&#60;audio&#62;` and `&#60;video&#62;` These tags are used to embed
          audio and video files directly into a webpage without the need for
          external plugins like Flash. They are supported by all modern
          browsers.
          <br />
          ЁЯФ╣ How they work:
          <br />
          * The `&#60;audio&#62;` tag is used for adding sound or music.
          <br />
          * The `&#60;video&#62;` tag is used for embedding video content.
          <br />
          Both tags support several attributes to control playback:
          <br />
          ЁЯФ╕ Common attributes:
          <br />
          * `controls` тАУ shows play, pause, volume controls
          <br />
          * `autoplay` тАУ starts playing automatically
          <br />
          * `loop` тАУ repeats the media when finished
          <br />
          * `muted` тАУ starts the media in muted state
          <br />
          * `preload` тАУ hints the browser about loading behavior (`auto`,
          `metadata`, `none`)
          <br />
          ЁЯФ╣ Example (Audio):
          <br />
          &#60;audio controls&#62;
          <br />
          &#60;source src="audio.mp3" type="audio/mpeg" /&#62;
          <br />
          Your browser does not support the audio tag.
          <br />
          &#60;/audio&#62;
          <br />
          ЁЯФ╣ Example (Video):
          <br />
          &#60;video width="640" height="360" controls&#62;
          <br />
          &#60;source src="video.mp4" type="video/mp4" /&#62;
          <br />
          Your browser does not support the video tag.
          <br />
          &#60;/video&#62;
          <br />
          So, using these tags allows us to add media files that are playable
          directly on the page, with built-in browser support.
          <br />
          <br />
          `&#60;audio&#62;` ржПржмржВ `&#60;video&#62;` ржПржЗ ржЯрзНржпрж╛ржЧржЧрзБрж▓рзЛ ржжрж┐рзЯрзЗ ржЖржорж░рж╛ HTML
          ржкрзЗржЬрзЗ ржЕржбрж┐ржУ ржУ ржнрж┐ржбрж┐ржУ ржлрж╛ржЗрж▓ рж╕рж░рж╛рж╕рж░рж┐ ржПржоржмрзЗржб ржХрж░рждрзЗ ржкрж╛рж░рж┐, ржХрзЛржирзЛ ржПржХрзНрж╕ржЯрж╛рж░рзНржирж╛рж▓
          ржкрзНрж▓рж╛ржЧржЗржи ржЫрж╛рзЬрж╛ред рж╕ржм ржЖржзрзБржирж┐ржХ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржПржЧрзБрж▓рзЛ рж╕рж╛ржкрзЛрж░рзНржЯ ржХрж░рзЗред
          <br />
          ЁЯФ╣ ржХрж╛ржЬрзЗрж░ ржкржжрзНржзрждрж┐:
          <br />
          * `&#60;audio&#62;` ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ рж╕рж╛ржЙржирзНржб ржмрж╛ ржорж┐ржЙржЬрж┐ржХ ржлрж╛ржЗрж▓ ржкрзЗржЬрзЗ
          ржкрзНрж▓рзЗ ржХрж░рж╛рждрзЗ ржкрж╛рж░рж┐ред
          <br />
          * `&#60;video&#62;` ржЯрзНржпрж╛ржЧ ржжрж┐рзЯрзЗ ржнрж┐ржбрж┐ржУ ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рж┐ред
          <br />
          ржЙржнрзЯ ржЯрзНржпрж╛ржЧрзЗржЗ ржХрж┐ржЫрзБ ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ ржерж╛ржХрзЗ ржпрзЗржЧрзБрж▓рзЛ ржжрж┐рзЯрзЗ ржХржирзНржЯрзНрж░рзЛрж▓ ржХрж░рж╛ ржпрж╛рзЯ:
          <br />
          ЁЯФ╕ рж╕рж╛ржзрж╛рж░ржг ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ:
          <br />
          * `controls` тАУ ржкрзНрж▓рзЗ, ржкржЬ, ржнрж▓рж┐ржЙржо ржЗрждрзНржпрж╛ржжрж┐ ржмрж╛ржЯржи ржжрзЗржЦрж╛рзЯ
          <br />
          * `autoplay` тАУ ржкрзЗржЬ рж▓рзЛржб рж╣ржУрзЯрж╛рж░ рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗ ржЪрж╛рж▓рзБ рж╣рзЯ
          <br />
          * `loop` тАУ ржнрж┐ржбрж┐ржУ ржмрж╛ ржЕржбрж┐ржУ ржмрж╛рж░ржмрж╛рж░ ржЪрж▓рзЗ
          <br />
          * `muted` тАУ рж╢рзБрж░рзБрждрзЗржЗ рж╕рж╛ржЗрж▓рзЗржирзНржЯ ржЕржмрж╕рзНржерж╛рзЯ ржЪрж╛рж▓рзБ рж╣рзЯ
          <br />
          * `preload` тАУ ржмрзНрж░рж╛ржЙржЬрж╛рж░ржХрзЗ рж▓рзЛржбрж┐ржВ рж╕ржорзНржкрж░рзНржХрзЗ ржирж┐рж░рзНржжрзЗрж╢ ржжрзЗрзЯ
          <br />
          ЁЯФ╣ ржЙржжрж╛рж╣рж░ржг (Audio):
          <br />
          &#60;audio controls&#62;
          <br />
          &#60;source src="audio.mp3" type="audio/mpeg" /&#62;
          <br />
          ржЖржкржирж╛рж░ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржЕржбрж┐ржУ ржЯрзНржпрж╛ржЧ рж╕рж╛ржкрзЛрж░рзНржЯ ржХрж░рзЗ ржирж╛ред
          <br />
          &#60;/audio&#62;
          <br />
          ЁЯФ╣ ржЙржжрж╛рж╣рж░ржг (Video):
          <br />
          &#60;video width="640" height="360" controls&#62;
          <br />
          &#60;source src="video.mp4" type="video/mp4" /&#62;
          <br />
          ржЖржкржирж╛рж░ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржнрж┐ржбрж┐ржУ ржЯрзНржпрж╛ржЧ рж╕рж╛ржкрзЛрж░рзНржЯ ржХрж░рзЗ ржирж╛ред
          <br />
          &#60;/video&#62;
          <br />
          рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржкрзЗ, `&#60;audio&#62;` ржУ `&#60;video&#62;` ржЯрзНржпрж╛ржЧ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ
          ржЖржорж░рж╛ ржкрзЗржЬрзЗрж░ ржоржзрзНржпрзЗ ржЗржиржмрж┐рж▓рзНржЯ ржорж┐ржбрж┐ржпрж╝рж╛ ржкрзНрж▓рзЗрзЯрж╛рж░ рждрзИрж░рж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐, ржпрж╛ ржЗржЙржЬрж╛рж░
          ржлрзНрж░рзЗржирзНржбрж▓рж┐ ржПржмржВ ржбрж┐ржнрж╛ржЗрж╕ ржХржорзНржкрзНржпрж╛ржЯрж┐ржмрж▓ред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse12">
          12. Difference between{" "}
          <span className="font-bold">strong , b, em, i tags</span>?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse12"
          id="collapse12"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          All four tags are used to style text, but they have different meanings
          and purposes тАФ especially when it comes to semantics and
          accessibility.
          <br />
          ЁЯФ╣ `&#60;b&#62;` (Bold):
          <br />
          * Makes the text bold visually only.
          <br />
          * No extra importance or meaning is given to the text.
          <br />
          * It is purely stylistic.
          <br />
          * Example:
          <br />
          &#60;b&#62;Important Notice&#60;/b&#62;
          <br />
          ЁЯФ╣ `&#60;strong&#62;` (Strong Importance):
          <br />
          * Makes the text bold and also gives it semantic importance.
          <br />
          * Screen readers emphasize this text to assist visually impaired
          users.
          <br />
          * It means the text is very important.
          <br />
          * Example:
          <br />
          &#60;strong&#62;Warning: This action cannot be
          undone.&#60;/strong&#62;
          <br />
          ЁЯФ╣ `&#60;i&#62;` (Italic):
          <br />
          * Makes the text italic visually only.
          <br />
          * No emphasis or importance implied.
          <br />
          * Usually used for styling, technical terms, foreign words, etc.
          <br />
          * Example:
          <br />
          &#60;i&#62;Latin phrase: Carpe Diem&#60;/i&#62;
          <br />
          ЁЯФ╣ `&#60;em&#62;` (Emphasis):
          <br />
          * Makes the text italic and gives it emphasis.
          <br />
          * Screen readers change tone to reflect the emphasis.
          <br />
          * It means the text should be read with stress or focus.
          <br />
          * Example:
          <br />
          &#60;em&#62;Do not ignore this message.&#60;/em&#62;
          <br />
          So, I use `&#60;b&#62;` and `&#60;i&#62;` for visual design only, but
          I prefer `&#60;strong&#62;` and `&#60;em&#62;` when meaning and
          accessibility are important.
          <br />
          <br />
          `&#60;strong&#62;`, `&#60;b&#62;`, `&#60;em&#62;`, ржПржмржВ `&#60;i&#62;`
          ржПржЗ ржЪрж╛рж░ржЯрж┐ ржЯрзНржпрж╛ржЧржЗ ржЯрзЗржХрзНрж╕ржЯрзЗрж░ рж╕рзНржЯрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд рж╣рзЯ, ржХрж┐ржирзНрждрзБ
          ржПржжрзЗрж░ ржоржзрзНржпрзЗ ржЕрж░рзНржержкрзВрж░рзНржг (semantic) ржПржмржВ ржжрзГрж╖рзНржЯрж┐ржирж┐рж░рзНржнрж░ (visual) ржмрзНржпржмрж╣рж╛рж░рзЗ
          ржкрж╛рж░рзНржержХрзНржп ржЖржЫрзЗред
          <br />
          ЁЯФ╣ `&#60;b&#62;` (Bold):
          <br />
          * рж╢рзБржзрзБржорж╛рждрзНрж░ ржЯрзЗржХрзНрж╕ржЯ ржмрзЛрж▓рзНржб ржХрж░рзЗред
          <br />
          * ржПрж░ ржХрзЛржи ржЕрждрж┐рж░рж┐ржХрзНржд ржЧрзБрж░рзБрждрзНржм ржмрж╛ ржорж╛ржирзЗ ржирзЗржЗред
          <br />
          * рж╢рзБржзрзБ рж╕рзНржЯрж╛ржЗрж▓рж┐ржВ ржПрж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд рж╣рзЯред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          &#60;b&#62;Important Notice&#60;/b&#62;
          <br />
          ЁЯФ╣ `&#60;strong&#62;` (ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг):
          <br />
          * ржЯрзЗржХрзНрж╕ржЯ ржмрзЛрж▓рзНржб ржХрж░рзЗ ржПржмржВ ржмрзЛржЭрж╛рзЯ ржПржЯрж┐ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржгред
          <br />
          * рж╕рзНржХрзНрж░рж┐ржи рж░рж┐ржбрж╛рж░ ржПржЗ ржЯрзЗржХрзНрж╕ржЯржХрзЗ ржЖрж▓рж╛ржжрж╛ ржЧрзБрж░рзБрждрзНржм ржжрж┐рзЯрзЗ ржкрзЬрзЗред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          &#60;strong&#62;Warning: This action cannot be
          undone.&#60;/strong&#62;
          <br />
          ЁЯФ╣ `&#60;i&#62;` (Italic):
          <br />
          * рж╢рзБржзрзБржорж╛рждрзНрж░ ржЗржЯрж╛рж▓рж┐ржХ ржХрж░рзЗред
          <br />
          * ржХрзЛржирзЛ ржЕрж░рзНрже ржмрж╛ ржЬрзЛрж░ ржмрзЛржЭрж╛рзЯ ржирж╛ред
          <br />
          * рж╕рж╛ржзрж╛рж░ржгржд ржмрж┐ржжрзЗрж╢рж┐ рж╢ржмрзНржж, ржЯрзЗржХржирж┐ржХрзНржпрж╛рж▓ ржЯрж╛рж░рзНржо ржЗрждрзНржпрж╛ржжрж┐рж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд рж╣рзЯред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          &#60;i&#62;Latin phrase: Carpe Diem&#60;/i&#62;
          <br />
          ЁЯФ╣ `&#60;em&#62;` (Emphasis):
          <br />
          * ржЯрзЗржХрзНрж╕ржЯржХрзЗ ржЗржЯрж╛рж▓рж┐ржХ ржХрж░рзЗ ржПржмржВ ржЬрзЛрж░ ржжрж┐рзЯрзЗ ржкрзЬрждрзЗ ржмрж▓рзЗред
          <br />
          * рж╕рзНржХрзНрж░рж┐ржи рж░рж┐ржбрж╛рж░ ржПржЯрж╛ржХрзЗ ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржЙржЪрзНржЪрж╛рж░ржг ржХрж░рзЗред
          <br />
          * ржЙржжрж╛рж╣рж░ржг:
          <br />
          &#60;em&#62;Do not ignore this message.&#60;/em&#62;
          <br />
          рж╕ржВржХрзНрж╖рзЗржкрзЗ, ржЖржорж┐ ржпржЦржи рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рзНржЯрж╛ржЗрж▓ ржжрж░ржХрж╛рж░ рждржЦржи `&#60;b&#62;` ржмрж╛
          `&#60;i&#62;` ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐, ржЖрж░ ржпржЦржи ржЕрж░рзНрже ржУ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕рж┐ржмрж┐рж▓рж┐ржЯрж┐
          ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг, рждржЦржи `&#60;strong&#62;` ржмрж╛ `&#60;em&#62;` ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред
        </div>
      </div>
      <div className="flex flex-wrap justify-start overflow-hidden bg-green-100 text-green-600 shadow-md mb-2">
        <label className="grow px-4 md:text-[18px]" htmlFor="collapse13">
          13. What is <span className="font-bold">charset</span> in html? Why
          will you use it?
        </label>
        <input
          className="peer p-0 m-0 h-0 w-0 appearance-none rounded border text-slate-800 accent-slate-600 opacity-0"
          type="checkbox"
          name="collapse13"
          id="collapse13"
        />
        <div className="-transparent w-full absolute -translate-y-full scale-75 scale-y-0 px-4 py-1 opacity-0 transition-all duration-0 peer-checked:relative peer-checked:translate-y-0 peer-checked:scale-100 peer-checked:scale-y-100 peer-checked:bg-green-50 text-lg text-black peer-checked:opacity-100">
          In HTML, `charset` stands for character set. It defines which set of
          characters the browser should use to correctly display the text on a
          webpage.
          <br />
          The most commonly used charset is UTF-8, which can represent almost
          every character from all languages тАФ including English, Bengali,
          Chinese, Arabic, symbols, emojis, and more.
          <br />
          ЁЯФ╣ Why I use it:
          <br />
          * To ensure special characters and multilingual content display
          correctly.
          <br />
          * To avoid encoding issues like strange symbols (я┐╜) or broken text.
          <br />
          * It also improves browser rendering speed, because the browser knows
          the encoding early.
          <br />
          ЁЯФ╣ How to use it:
          <br />
          You add it in the `&#60;head&#62;` section like this:
          <br />
          &#60;meta charset="UTF-8"&#62;
          <br />
          This tells the browser:
          <br />
          тАЬUse UTF-8 encoding for this HTML document.тАЭ
          <br />
          So, I always use the charset declaration to make my website universal,
          readable, and error-free across all devices and languages.
          <br />
          <br />
          HTML-ржП `charset` ржПрж░ ржЕрж░рзНрже рж╣рж▓рзЛ character setред ржПржЯрж┐ ржмрзНрж░рж╛ржЙржЬрж╛рж░ржХрзЗ ржЬрж╛ржирж╛рзЯ ржпрзЗ,
          ржХрзЛржи ржЕржХрзНрж╖рж░рзЗрж░ ржХрзЛржбрж┐ржВ рж╕рж┐рж╕рзНржЯрзЗржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржУрзЯрзЗржмржкрзЗржЬрзЗрж░ рж▓рзЗржЦрж╛ ржжрзЗржЦрж╛рждрзЗ рж╣ржмрзЗред
          <br />
          рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ ржмрзНржпржмрж╣рзГржд charset рж╣рж▓рзЛ UTF-8, ржпрзЗржЯрж┐ ржкрзНрж░рж╛ржпрж╝ рж╕ржм ржнрж╛рж╖рж╛рж░ ржмрж░рзНржгржорж╛рж▓рж╛,
          рж╕ржВржЦрзНржпрж╛, ржЪрж┐рж╣рзНржи ржУ ржЗржорзЛржЬрж┐ рж╕рж╛ржкрзЛрж░рзНржЯ ржХрж░рзЗ тАФ ржпрзЗржоржи ржЗржВрж░рзЗржЬрж┐, ржмрж╛ржВрж▓рж╛, ржЪрж╛ржЗржирж┐ржЬ
          ржЗрждрзНржпрж╛ржжрж┐ред
          <br />
          ЁЯФ╣ ржЖржорж┐ ржХрзЗржи charset ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐:
          <br />
          * ржпрзЗржи рж╕ржм ржнрж╛рж╖рж╛рж░ ржПржмржВ ржмрж┐рж╢рзЗрж╖ ржЪрж┐рж╣рзНржи рж╕ржарж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛рзЯред
          <br />
          * ржнрж╛ржЩрж╛ рж▓рзЗржЦрж╛ ржмрж╛ ржнрзБрж▓ ржХрзНржпрж╛рж░рзЗржХрзНржЯрж╛рж░ (ржпрзЗржоржи: я┐╜) ржЖрж╕рж╛ ржерзЗржХрзЗ ржмрж╛ржБржЪрж╛рждрзЗред
          <br />
          * ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржжрзНрж░рзБржд ржУ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржХржиржЯрзЗржирзНржЯ рж░рзЗржирзНржбрж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗред
          <br />
          ЁЯФ╣ ржХрзЛржбрзЗ ржХрж┐ржнрж╛ржмрзЗ рж▓рж┐ржЦрж┐:
          <br />
          &#60;meta charset="UTF-8"&#62;
          <br />
          ржПржЯрж┐ `&#60;head&#62;` ржЯрзНржпрж╛ржЧрзЗрж░ ржнрж┐рждрж░рзЗ рж▓рж┐ржЦрж╛ рж╣рзЯ ржПржмржВ ржПржЯрж┐ ржмрзНрж░рж╛ржЙржЬрж╛рж░ржХрзЗ ржЬрж╛ржирж╛рзЯ тАФ
          <br />
          тАЬржПржЗ HTML ржлрж╛ржЗрж▓рзЗ UTF-8 ржПржиржХрзЛржбрж┐ржВ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛредтАЭ
          <br />
          рждрж╛ржЗ ржЖржорж┐ рж╕ржмрж╕ржорзЯ charset ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐, ржпрж╛рждрзЗ ржЖржорж╛рж░ ржУрзЯрзЗржмрж╕рж╛ржЗржЯ рж╕ржм ржнрж╛рж╖рж╛рзЯ ржУ рж╕ржм
          ржбрж┐ржнрж╛ржЗрж╕рзЗ ржарж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛ ржпрж╛рзЯред
        </div>
      </div>
    </Container>
  );
};

export default QnA_html;
